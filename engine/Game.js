// Generated by CoffeeScript 1.7.1
(function() {
  var Heroine, Player;

  Heroine = require('./Heroine').Heroine;
  Player = require('./Player').Player;

  exports.Game = (function() {
    function Game(numPlayers) {
      this.numPlayers = numPlayers;
      this.heroines = [];
      this.turn = 0;
    }

    Game.prototype.addHeroine = function(value) {
      return this.heroines.push(new Heroine(value, this.numPlayers));
    };

    Game.prototype.proceed = function(moves) {
      var heroine, i, playerIndex, targetHeroineIndex, _i, _j, _k, _len, _ref, _ref1, _ref2, _results;
      this.turn += 1;
      for (i = _i = 0, _ref = this.turn - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        for (playerIndex = _j = 0, _ref1 = this.numPlayers - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; playerIndex = 0 <= _ref1 ? ++_j : --_j) {
          targetHeroineIndex = moves[playerIndex][i];
          if (targetHeroineIndex < 0 || targetHeroineIndex >= this.heroines.length) {
            targetHeroineIndex = 0;
          }
          this.heroines[targetHeroineIndex].date(playerIndex);
        }
      }
      _ref2 = this.heroines;
      _results = [];
      for (_k = 0, _len = _ref2.length; _k < _len; _k++) {
        heroine = _ref2[_k];
        _results.push(heroine.updateLoveScore());
      }
      return _results;
    };

    Game.prototype.isFinished = function() {
      return this.turn === 10;
    };

    Game.prototype.getRanking = function() {
      var bestPlayer, bestPlayers, heroine, index, player, players, _i, _j, _k, _len, _len1, _len2, _ref;
      players = (function() {
        var _i, _ref, _results;
        _results = [];
        for (index = _i = 0, _ref = this.numPlayers - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; index = 0 <= _ref ? ++_i : --_i) {
          _results.push(new Player(index));
        }
        return _results;
      }).call(this);
      _ref = this.heroines;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        heroine = _ref[_i];
        bestPlayers = heroine.getBestPlayers(players);
        for (_j = 0, _len1 = bestPlayers.length; _j < _len1; _j++) {
          bestPlayer = bestPlayers[_j];
          bestPlayer.star += 1 / bestPlayers.length;
        }
      }
      for (_k = 0, _len2 = players.length; _k < _len2; _k++) {
        player = players[_k];
        player.totalLoveScore = ((function() {
          var _l, _len3, _ref1, _results;
          _ref1 = this.heroines;
          _results = [];
          for (_l = 0, _len3 = _ref1.length; _l < _len3; _l++) {
            heroine = _ref1[_l];
            _results.push(heroine.loveScore[player.index]);
          }
          return _results;
        }).call(this)).reduce(function(x, y) {
          return x + y;
        });
      }
      return players.slice(0).sort(Player.compareTo).reverse();
    };

    return Game;

  })();

}).call(this);
